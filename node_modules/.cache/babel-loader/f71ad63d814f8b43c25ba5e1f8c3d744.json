{"ast":null,"code":"var _jsxFileName = \"/home/webster/Development/code/Mod2/react-beats/src/components/TrackList.js\";\nimport React, { useContext, memo } from 'react';\nimport { Context } from '../hooks/useStore';\nimport { soundFiles } from '../constants/config';\nimport Track from './Track';\nimport { context } from 'tone';\n\nconst TrackList = ({\n  currentStepID\n}) => {\n  const _useContext = useContext(Context),\n        _useContext$sequence = _useContext.sequence,\n        trackList = _useContext$sequence.trackList,\n        noteCount = _useContext$sequence.noteCount;\n\n  const toSave = trackList.map(track => {\n    console.log(track);\n    const soundSave = {\n      name: track.soundFile,\n      notes: track.onNotes\n    };\n    return soundSave;\n  });\n\n  function saveIt(e) {\n    const track0 = toSave[0].title;\n    let newBeat = {\n      [toSave[0].name]: toSave[0].notes,\n      [toSave[1].name]: toSave[1].notes,\n      [toSave[2].name]: toSave[2].notes,\n      [toSave[3].name]: toSave[3].notes\n    };\n    fetch('http://localhost:4000/beats', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBeat)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    }); //post  \n\n    console.log('newBeat', newBeat);\n  }\n\n  const content = trackList.map((track, trackID) => {\n    const title = track.title,\n          onNotes = track.onNotes,\n          soundFile = track.soundFile;\n    const soundFilePath = soundFiles[soundFile];\n    return React.createElement(React.Fragment, null, React.createElement(Track, {\n      key: title,\n      trackID: +trackID,\n      currentStepID: currentStepID,\n      title: title,\n      noteCount: noteCount,\n      onNotes: onNotes,\n      soundFilePath: soundFilePath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"track-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, content), React.createElement(\"button\", {\n    onClick: e => saveIt(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" SAVE BEAT \"));\n};\n\nexport default memo(TrackList);","map":{"version":3,"sources":["/home/webster/Development/code/Mod2/react-beats/src/components/TrackList.js"],"names":["React","useContext","memo","Context","soundFiles","Track","context","TrackList","currentStepID","sequence","trackList","noteCount","toSave","map","track","console","log","soundSave","name","soundFile","notes","onNotes","saveIt","e","track0","title","newBeat","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","error","content","trackID","soundFilePath"],"mappings":"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","sourcesContent":["import React, { useContext, memo } from 'react'\nimport { Context } from '../hooks/useStore'\nimport { soundFiles } from '../constants/config'\nimport Track from './Track'\nimport { context } from 'tone'\n\nconst TrackList = ({ currentStepID }) => {\n    const { sequence: { trackList, noteCount } } = useContext(Context)\n\n    const toSave = trackList.map(track => {\n        console.log(track)\n        const soundSave = {\n            name: track.soundFile,\n            notes: track.onNotes\n        }\n        return soundSave\n    })\n    function saveIt(e) {\n        const track0 = toSave[0].title\n\n\n        let newBeat = {\n            [toSave[0].name]: toSave[0].notes,\n            [toSave[1].name]: toSave[1].notes,\n            [toSave[2].name]: toSave[2].notes,\n            [toSave[3].name]: toSave[3].notes\n\n        }\n        fetch('http://localhost:4000/beats', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newBeat),\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n\n\n        //post  \n\n\n        console.log('newBeat', newBeat)\n\n    }\n\n    const content = trackList.map((track, trackID) => {\n        const { title, onNotes, soundFile } = track\n        const soundFilePath = soundFiles[soundFile]\n\n\n\n\n\n        return (\n            <>\n\n                <Track\n\n                    key={title}\n                    trackID={+trackID}\n                    currentStepID={currentStepID}\n                    title={title}\n                    noteCount={noteCount}\n                    onNotes={onNotes}\n                    soundFilePath={soundFilePath}\n                />\n\n\n\n            </>\n        )\n    })\n\n\n\n    return (\n        <>\n\n\n            <div className=\"track-list\">\n                {content}\n\n            </div>\n            <button onClick={(e) => saveIt()} > SAVE BEAT </ button>\n\n        </>\n    )\n}\n\nexport default memo(TrackList)\n\n"]},"metadata":{},"sourceType":"module"}