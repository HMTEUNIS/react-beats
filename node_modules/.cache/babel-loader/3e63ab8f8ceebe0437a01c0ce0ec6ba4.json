{"ast":null,"code":"import _slicedToArray from \"/home/hmteunis/Development/Code/Mod2/808/simpler/Test/react-beats/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hmteunis/Development/Code/Mod2/808/simpler/Test/react-beats/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ToolBar from './components/Toolbar';\nimport Steps from './components/Steps';\nimport TrackList from './components/TrackList';\nimport PlayHead from './components/PlayHead';\nimport { Provider } from './hooks/useStore';\nimport useTimer from './hooks/useTimer';\nimport useStyles from './hooks/useStyles';\nimport './App.css';\nimport Keys from './Keys';\nimport Nav from './components/Nav';\nimport Saved from './Saved';\n\nfunction App() {\n  const baseBPMPerOneSecond = 60;\n  const stepsPerBar = 8;\n  const beatsPerBar = 4;\n  const barsPerSequence = 2;\n  const totalSteps = stepsPerBar * barsPerSequence;\n  const totalBeats = beatsPerBar * barsPerSequence;\n\n  const _useState = useState(120),\n        _useState2 = _slicedToArray(_useState, 2),\n        BPM = _useState2[0],\n        setBPM = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        startTime = _useState4[0],\n        setStartTime = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        pastLapsedTime = _useState6[0],\n        setPastLapse = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentStepID = _useState8[0],\n        setCurrentStep = _useState8[1];\n\n  const _useStyles = useStyles(totalSteps),\n        _useStyles2 = _slicedToArray(_useStyles, 1),\n        getNotesAreaWidthInPixels = _useStyles2[0];\n\n  const notesAreaWidthInPixels = getNotesAreaWidthInPixels(totalSteps);\n  const timePerSequence = baseBPMPerOneSecond / BPM * 1000 * totalBeats;\n  const timePerStep = timePerSequence / totalSteps;\n  const isSequencePlaying = startTime !== null;\n  const playerTime = useTimer(isSequencePlaying);\n  const lapsedTime = isSequencePlaying ? Math.max(0, playerTime - startTime) : 0;\n  const totalLapsedTime = pastLapsedTime + lapsedTime; //save beat\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        savedPattern = _useState10[0],\n        savePattern = _useState10[1];\n\n  useEffect(() => {\n    if (isSequencePlaying) {\n      setCurrentStep(Math.floor(totalLapsedTime / timePerStep) % totalSteps);\n    } else {\n      setCurrentStep(null);\n    }\n  }, [isSequencePlaying, timePerStep, totalLapsedTime, totalSteps]);\n  const toolBarProps = {\n    setStartTime,\n    setPastLapse,\n    setBPM,\n    isSequencePlaying,\n    startTime,\n    BPM\n  };\n  const playHeadProps = {\n    notesAreaWidthInPixels,\n    timePerSequence,\n    totalLapsedTime\n  };\n  const trackListProps = {\n    currentStepID ///retreiveing saved beats\n\n  };\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        fetched = _useState12[0],\n        setFetched = _useState12[1];\n\n  useEffect(() => {\n    fetch('http://localhost:4000/beats').then(response => response.json()).then(data => console.log(data));\n  }, []);\n  return React.createElement(Provider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"header\", {\n    className: \"app_header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"app_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"REACT-BEATS\"), React.createElement(ToolBar, Object.assign({}, toolBarProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(Steps, {\n    count: totalSteps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"app_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(PlayHead, Object.assign({}, playHeadProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(TrackList, Object.assign({}, trackListProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Saved, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"footer\", {\n    className: \"app_footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \" Special Thanks to Joe Seifi for the React808 ap!\")), React.createElement(\"div\", {\n    className: \"keys\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Keys, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hmteunis/Development/Code/Mod2/808/simpler/Test/react-beats/src/App.js"],"names":["React","useState","useEffect","ToolBar","Steps","TrackList","PlayHead","Provider","useTimer","useStyles","Keys","Nav","Saved","App","baseBPMPerOneSecond","stepsPerBar","beatsPerBar","barsPerSequence","totalSteps","totalBeats","BPM","setBPM","startTime","setStartTime","pastLapsedTime","setPastLapse","currentStepID","setCurrentStep","getNotesAreaWidthInPixels","notesAreaWidthInPixels","timePerSequence","timePerStep","isSequencePlaying","playerTime","lapsedTime","Math","max","totalLapsedTime","savedPattern","savePattern","floor","toolBarProps","playHeadProps","trackListProps","fetched","setFetched","fetch","then","response","json","data","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ToolBar from './components/Toolbar'\nimport Steps from './components/Steps'\nimport TrackList from './components/TrackList'\nimport PlayHead from './components/PlayHead'\nimport { Provider } from './hooks/useStore'\nimport useTimer from './hooks/useTimer'\nimport useStyles from './hooks/useStyles'\nimport './App.css'\nimport Keys from './Keys'\nimport Nav from './components/Nav'\nimport Saved from './Saved'\n\nfunction App() {\n\n    const baseBPMPerOneSecond = 60\n    const stepsPerBar = 8\n    const beatsPerBar = 4\n    const barsPerSequence = 2\n    const totalSteps = stepsPerBar * barsPerSequence\n    const totalBeats = beatsPerBar * barsPerSequence\n\n    const [BPM, setBPM] = useState(120)\n    const [startTime, setStartTime] = useState(null)\n    const [pastLapsedTime, setPastLapse] = useState(0)\n    const [currentStepID, setCurrentStep] = useState(null)\n    const [getNotesAreaWidthInPixels] = useStyles(totalSteps)\n\n    const notesAreaWidthInPixels = getNotesAreaWidthInPixels(totalSteps)\n    const timePerSequence = baseBPMPerOneSecond / BPM * 1000 * totalBeats\n    const timePerStep = timePerSequence / totalSteps\n    const isSequencePlaying = startTime !== null\n    const playerTime = useTimer(isSequencePlaying)\n    const lapsedTime = isSequencePlaying ? Math.max(0, playerTime - startTime) : 0\n    const totalLapsedTime = pastLapsedTime + lapsedTime\n\n    //save beat\n    const [savedPattern, savePattern] = useState ([])\n\n    useEffect(() => {\n        if (isSequencePlaying) {\n            setCurrentStep(Math.floor(totalLapsedTime / timePerStep) % totalSteps)\n        } else {\n            setCurrentStep(null)\n        }\n    }, [isSequencePlaying, timePerStep, totalLapsedTime, totalSteps])\n\n    const toolBarProps = {\n        setStartTime,\n        setPastLapse,\n        setBPM,\n        isSequencePlaying,\n        startTime,\n        BPM\n    }\n\n    const playHeadProps = {\n        notesAreaWidthInPixels,\n        timePerSequence,\n        totalLapsedTime\n    }\n\n    const trackListProps = {\n        currentStepID\n    }\n\n    ///retreiveing saved beats\n    const [fetched, setFetched] = useState ([])\nuseEffect(() => {\n    fetch ('http://localhost:4000/beats')\n  \n    .then(response => response.json())\n    .then(data => console.log(data));\n\n    \n}, [])\n    \n    return (\n        <Provider>\n            <main className=\"app\">\n                <Nav />\n                <header className=\"app_header\">\n                    <h1 className=\"app_title\">REACT-BEATS</h1>\n                    <ToolBar {...toolBarProps} />\n                  \n                </header>\n                <Steps count={totalSteps} />\n                <div className=\"app_content\">\n                    <PlayHead {...playHeadProps} />\n                    <TrackList {...trackListProps} />\n                    <Saved />\n                    \n                </div>\n                <footer className=\"app_footer\">\n                    <a> Special Thanks to Joe Seifi for the React808 ap!</a>\n                </footer>\n                <div className=\"keys\">\n                    <Keys />\n                </div>\n            </main >\n        </Provider>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}